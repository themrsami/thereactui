{"version":3,"file":"CodeBlock.jsx","sourceRoot":"","sources":["../../../components/ui/CodeBlock/CodeBlock.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AACjD,OAAO,KAAK,MAAM,SAAS,CAAC;AAC5B,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,4CAA4C;AAC5C,OAAO,qCAAqC,CAAC;AAC7C,OAAO,qCAAqC,CAAC;AAC7C,OAAO,8BAA8B,CAAC;AACtC,OAAO,8BAA8B,CAAC;AACtC,OAAO,8BAA8B,CAAC;AACtC,OAAO,+BAA+B,CAAC;AACvC,OAAO,+BAA+B,CAAC;AACvC,OAAO,+BAA+B,CAAC;AACvC,OAAO,mCAAmC,CAAC;AAS3C,MAAM,UAAU,SAAS,CAAC,EACxB,QAAQ,EACR,QAAQ,GAAG,YAAY,EACvB,QAAQ,EACR,SAAS,GAAG,EAAE,EACC;IACf,MAAM,OAAO,GAAG,MAAM,CAAc,IAAI,CAAC,CAAC;IAE1C,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YACpB,4DAA4D;YAC5D,OAAO,CAAC,OAAO,CAAC,WAAW,GAAG,QAAQ,CAAC;YAEvC,iCAAiC;YACjC,KAAK,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC;IACH,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;IAEzB,OAAO,CACL,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,eAAe,SAAS,EAAE,CAAC,CACzC;MAAA,CAAC,QAAQ,IAAI,CACX,CAAC,GAAG,CAAC,SAAS,CAAC,sDAAsD,CACnE;UAAA,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,IAAI,CACtB;UAAA,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,EAC7B;QAAA,EAAE,GAAG,CAAC,CACP,CACD;MAAA,CAAC,GAAG,CAAC,SAAS,CAAC,8BAA8B,CAC3C;QAAA,CAAC,CAAC,QAAQ,IAAI,CACZ,CAAC,GAAG,CAAC,SAAS,CAAC,wBAAwB,CACrC;YAAA,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,EAC7B;UAAA,EAAE,GAAG,CAAC,CACP,CACD;QAAA,CAAC,GAAG,CACF;UAAA,CAAC,IAAI,CACH,GAAG,CAAC,CAAC,OAAO,CAAC,CACb,SAAS,CAAC,CAAC,YAAY,QAAQ,EAAE,CAAC,CAElC;YAAA,CAAC,QAAQ,CACX;UAAA,EAAE,IAAI,CACR;QAAA,EAAE,GAAG,CACP;MAAA,EAAE,GAAG,CACP;IAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC","sourcesContent":["'use client';\r\n\r\nimport React, { useEffect, useRef } from 'react';\r\nimport Prism from 'prismjs';\r\nimport { CopyButton } from '../CopyButton';\r\n\r\n// Import commonly used language definitions\r\nimport 'prismjs/components/prism-typescript';\r\nimport 'prismjs/components/prism-javascript';\r\nimport 'prismjs/components/prism-jsx';\r\nimport 'prismjs/components/prism-tsx';\r\nimport 'prismjs/components/prism-css';\r\nimport 'prismjs/components/prism-scss';\r\nimport 'prismjs/components/prism-json';\r\nimport 'prismjs/components/prism-bash';\r\nimport 'prismjs/components/prism-markdown';\r\n\r\ninterface CodeBlockProps {\r\n  children: string;\r\n  language?: string;\r\n  filename?: string;\r\n  className?: string;\r\n}\r\n\r\nexport function CodeBlock({ \r\n  children, \r\n  language = 'typescript', \r\n  filename,\r\n  className = '' \r\n}: CodeBlockProps) {\r\n  const codeRef = useRef<HTMLElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (codeRef.current) {\r\n      // Set the text content directly to avoid JSX interpretation\r\n      codeRef.current.textContent = children;\r\n      \r\n      // Then apply syntax highlighting\r\n      Prism.highlightElement(codeRef.current);\r\n    }\r\n  }, [children, language]);\r\n\r\n  return (\r\n    <div className={`code-window ${className}`}>\r\n      {filename && (\r\n        <div className=\"code-window-header flex items-center justify-between\">\r\n          <span>{filename}</span>\r\n          <CopyButton text={children} />\r\n        </div>\r\n      )}\r\n      <div className=\"code-window-content relative\">\r\n        {!filename && (\r\n          <div className=\"absolute top-2 right-2\">\r\n            <CopyButton text={children} />\r\n          </div>\r\n        )}\r\n        <pre>\r\n          <code \r\n            ref={codeRef}\r\n            className={`language-${language}`}\r\n          >\r\n            {children}\r\n          </code>\r\n        </pre>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]}