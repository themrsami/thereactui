{"version":3,"file":"Input.js","sourceRoot":"","sources":["../../../components/ui/Input/Input.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAGnC,MAAM,KAAK,GAAG,UAAU,CACtB,CAAC,EACC,SAAS,GAAG,EAAE,EACd,OAAO,GAAG,SAAS,EACnB,IAAI,GAAG,IAAI,EACX,KAAK,GAAG,KAAK,EACb,UAAU,EACV,YAAY,EACZ,KAAK,EACL,WAAW,GAAG,KAAK,EACnB,EAAE,EACF,GAAG,KAAK,EACT,EAAE,GAAG,EAAE,EAAE;IACR,qCAAqC;IACrC,MAAM,OAAO,GAAG,EAAE,IAAI,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;IAEzE,yCAAyC;IACzC,MAAM,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC;IAEhD,eAAe;IACf,MAAM,WAAW,GAAG;QAClB,EAAE,EAAE,kBAAkB;QACtB,EAAE,EAAE,qBAAqB;QACzB,EAAE,EAAE,mBAAmB;KACxB,CAAC;IAEF,kBAAkB;IAClB,MAAM,cAAc,GAAG;QACrB,OAAO,EAAE,kDAAkD;QAC3D,KAAK,EAAE,+DAA+D;QACtE,OAAO,EAAE,qEAAqE;KAC/E,CAAC;IAEF,sDAAsD;IACtD,MAAM,WAAW,GAAG;;;;;;;;;;;QAWhB,WAAW,CAAC,IAAI,CAAC;QACjB,cAAc,CAAC,aAAa,CAAC;KAChC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IAE9B,MAAM,cAAc,GAAG,GAAG,WAAW,IAAI,SAAS,EAAE,CAAC;IAErD,OAAO,CACL,eAAK,SAAS,EAAC,QAAQ,aACpB,KAAK,IAAI,CACR,gBACE,OAAO,EAAE,OAAO,EAChB,SAAS,EAAE;;gBAEP,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;aAC/B,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,YAE5B,KAAK,GACA,CACT,EAED,gBACE,GAAG,EAAE,GAAG,EACR,EAAE,EAAE,OAAO,EACX,SAAS,EAAE,cAAc,KACrB,KAAK,GACT,EAED,CAAC,UAAU,IAAI,YAAY,CAAC,IAAI,CAC/B,YAAG,SAAS,EAAE;;cAEV,KAAK,IAAI,YAAY,CAAC,CAAC,CAAC,gCAAgC,CAAC,CAAC,CAAC,4BAA4B;WAC1F,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,YAC1B,KAAK,IAAI,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,UAAU,GAChD,CACL,IACG,CACP,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,KAAK,CAAC,WAAW,GAAG,OAAO,CAAC;AAE5B,OAAO,EAAE,KAAK,EAAE,CAAC","sourcesContent":["'use client';\r\n\r\nimport { forwardRef } from 'react';\r\nimport { InputProps } from './Input.types';\r\n\r\nconst Input = forwardRef<HTMLInputElement, InputProps>(\r\n  ({\r\n    className = '',\r\n    variant = 'default',\r\n    size = 'md',\r\n    error = false,\r\n    helperText,\r\n    errorMessage,\r\n    label,\r\n    labelHidden = false,\r\n    id,\r\n    ...props\r\n  }, ref) => {\r\n    // Generate unique ID if not provided\r\n    const inputId = id || `input-${Math.random().toString(36).substr(2, 9)}`;\r\n    \r\n    // Determine variant based on error state\r\n    const actualVariant = error ? 'error' : variant;\r\n\r\n    // Size classes\r\n    const sizeClasses = {\r\n      sm: 'h-8 text-sm px-2',\r\n      md: 'h-10 text-base px-3',\r\n      lg: 'h-12 text-lg px-4'\r\n    };\r\n\r\n    // Variant classes\r\n    const variantClasses = {\r\n      default: 'border-current focus:border-current focus:ring-0',\r\n      error: 'border-red-500 focus:border-red-500 focus:ring-0 text-red-900',\r\n      success: 'border-green-500 focus:border-green-500 focus:ring-0 text-green-900'\r\n    };\r\n\r\n    // Base classes following theReactUI design principles\r\n    const baseClasses = `\r\n      w-full\r\n      border\r\n      bg-background\r\n      text-foreground\r\n      transition-colors\r\n      duration-200\r\n      focus:outline-none\r\n      placeholder:opacity-50\r\n      disabled:opacity-50\r\n      disabled:cursor-not-allowed\r\n      ${sizeClasses[size]}\r\n      ${variantClasses[actualVariant]}\r\n    `.trim().replace(/\\s+/g, ' ');\r\n\r\n    const finalClassName = `${baseClasses} ${className}`;\r\n\r\n    return (\r\n      <div className=\"w-full\">\r\n        {label && (\r\n          <label \r\n            htmlFor={inputId}\r\n            className={`\r\n              block text-sm font-medium text-foreground mb-2\r\n              ${labelHidden ? 'sr-only' : ''}\r\n            `.trim().replace(/\\s+/g, ' ')}\r\n          >\r\n            {label}\r\n          </label>\r\n        )}\r\n        \r\n        <input\r\n          ref={ref}\r\n          id={inputId}\r\n          className={finalClassName}\r\n          {...props}\r\n        />\r\n        \r\n        {(helperText || errorMessage) && (\r\n          <p className={`\r\n            mt-2 text-sm\r\n            ${error || errorMessage ? 'text-red-600 dark:text-red-400' : 'text-foreground opacity-70'}\r\n          `.trim().replace(/\\s+/g, ' ')}>\r\n            {error || errorMessage ? errorMessage : helperText}\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nInput.displayName = 'Input';\r\n\r\nexport { Input };\r\n"]}