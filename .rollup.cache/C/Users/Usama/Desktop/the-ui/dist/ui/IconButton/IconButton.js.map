{"version":3,"file":"IconButton.js","sourceRoot":"","sources":["../../../components/ui/IconButton/IconButton.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAc,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAG1C,MAAM,UAAU,GAAG,UAAU,CAC3B,CAAC,EACC,OAAO,GAAG,WAAW,EACrB,IAAI,GAAG,IAAI,EACX,OAAO,GAAG,KAAK,EACf,SAAS,GAAG,EAAE,EACd,QAAQ,EACR,QAAQ,EACR,YAAY,EAAE,SAAS,EACvB,GAAG,KAAK,EACT,EAAE,GAAG,EAAE,EAAE;IACR,0EAA0E;IAC1E,MAAM,UAAU,GAAG,kRAAkR,CAAC;IAEtS,6EAA6E;IAC7E,MAAM,aAAa,GAAG;QACpB,OAAO,EAAE,kGAAkG;QAC3G,SAAS,EAAE,mGAAmG;QAC9G,KAAK,EAAE,sFAAsF;KACrF,CAAC;IAEX,8CAA8C;IAC9C,MAAM,UAAU,GAAG;QACjB,EAAE,EAAE,iBAAiB;QACrB,EAAE,EAAE,qBAAqB;QACzB,EAAE,EAAE,mBAAmB;KACf,CAAC;IAEX,MAAM,iBAAiB,GAAG;QACxB,UAAU;QACV,aAAa,CAAC,OAAqC,CAAC;QACpD,UAAU,CAAC,IAA+B,CAAC;QAC3C,SAAS;KACV,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAEZ,OAAO,CACL,iBACE,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,iBAAiB,EAC5B,QAAQ,EAAE,QAAQ,IAAI,OAAO,gBACjB,SAAS,KACjB,KAAK,YAER,OAAO,CAAC,CAAC,CAAC,CACT,eAAM,SAAS,EAAE,+BACf,OAAO,KAAK,SAAS;gBACnB,CAAC,CAAC,wCAAwC;gBAC1C,CAAC,CAAC,qCACN,EAAE,GAAI,CACP,CAAC,CAAC,CAAC,CACF,QAAQ,CACT,GACM,CACV,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,UAAU,CAAC,WAAW,GAAG,YAAY,CAAC;AAEtC,OAAO,EAAE,UAAU,EAAE,CAAC","sourcesContent":["'use client';\r\n\r\nimport React, { forwardRef } from 'react';\r\nimport type { IconButtonProps } from './IconButton.types';\r\n\r\nconst IconButton = forwardRef<HTMLButtonElement, IconButtonProps>(\r\n  ({ \r\n    variant = 'secondary', \r\n    size = 'md', \r\n    loading = false,\r\n    className = '',\r\n    children,\r\n    disabled,\r\n    'aria-label': ariaLabel,\r\n    ...props \r\n  }, ref) => {\r\n    // Base styles - theReactUI principles: no border-radius, pure black/white\r\n    const baseStyles = 'inline-flex items-center justify-center font-medium transition-transform duration-100 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-current disabled:opacity-50 disabled:pointer-events-none active:translate-y-[1px] active:scale-[0.98]';\r\n    \r\n    // Variant styles - following theReactUI design: borders only, no backgrounds\r\n    const variantStyles = {\r\n      primary: 'bg-foreground text-background border border-foreground hover:bg-background hover:text-foreground',\r\n      secondary: 'bg-transparent text-foreground border border-foreground hover:bg-foreground hover:text-background',\r\n      ghost: 'bg-transparent text-foreground border-none hover:bg-foreground hover:text-background',\r\n    } as const;\r\n    \r\n    // Size styles - square aspect ratio for icons\r\n    const sizeStyles = {\r\n      sm: 'h-8 w-8 text-sm',\r\n      md: 'h-10 w-10 text-base',\r\n      lg: 'h-12 w-12 text-lg',\r\n    } as const;\r\n    \r\n    const combinedClassName = [\r\n      baseStyles,\r\n      variantStyles[variant as keyof typeof variantStyles],\r\n      sizeStyles[size as keyof typeof sizeStyles],\r\n      className,\r\n    ].join(' ');\r\n\r\n    return (\r\n      <button\r\n        ref={ref}\r\n        className={combinedClassName}\r\n        disabled={disabled || loading}\r\n        aria-label={ariaLabel}\r\n        {...props}\r\n      >\r\n        {loading ? (\r\n          <span className={`h-3 w-3 animate-spin border ${\r\n            variant === 'primary' \r\n              ? 'border-background border-t-transparent' \r\n              : 'border-current border-t-transparent'\r\n          }`} />\r\n        ) : (\r\n          children\r\n        )}\r\n      </button>\r\n    );\r\n  }\r\n);\r\n\r\nIconButton.displayName = 'IconButton';\r\n\r\nexport { IconButton };\r\n"]}