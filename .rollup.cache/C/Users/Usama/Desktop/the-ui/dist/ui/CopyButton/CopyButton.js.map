{"version":3,"file":"CopyButton.js","sourceRoot":"","sources":["../../../components/ui/CopyButton/CopyButton.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAc,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAC3C,OAAO,EAAE,MAAM,EAAE,MAAM,WAAW,CAAC;AAGnC,MAAM,UAAU,UAAU,CAAC,EACzB,IAAI,EACJ,OAAO,GAAG,OAAO,EACjB,IAAI,GAAG,IAAI,EACX,SAAS,GAAG,EAAE,EACd,QAAQ,GAAG,KAAK,EACA;IAChB,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAE5C,MAAM,UAAU,GAAG,KAAK,IAAI,EAAE;QAC5B,IAAI,CAAC;YACH,MAAM,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC1C,SAAS,CAAC,IAAI,CAAC,CAAC;YAEhB,uBAAuB;YACvB,UAAU,CAAC,GAAG,EAAE;gBACd,SAAS,CAAC,KAAK,CAAC,CAAC;YACnB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAC;QAC9C,CAAC;IACH,CAAC,CAAC;IAEF,OAAO,CACL,KAAC,MAAM,IACL,OAAO,EAAE,OAAO,EAChB,IAAI,EAAE,IAAI,EACV,OAAO,EAAE,UAAU,EACnB,SAAS,EAAE,2BAA2B,SAAS,EAAE,EACjD,QAAQ,EAAE,MAAM,YAEf,MAAM,CAAC,CAAC,CAAC,CACR,8BACE,KAAC,KAAK,IAAC,IAAI,EAAE,EAAE,GAAI,EAClB,CAAC,QAAQ,IAAI,SAAS,IACtB,CACJ,CAAC,CAAC,CAAC,CACF,8BACE,KAAC,IAAI,IAAC,IAAI,EAAE,EAAE,GAAI,EACjB,CAAC,QAAQ,IAAI,MAAM,IACnB,CACJ,GACM,CACV,CAAC;AACJ,CAAC","sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport { Copy, Check } from 'lucide-react';\r\nimport { Button } from '../Button';\r\nimport { CopyButtonProps } from './CopyButton.types';\r\n\r\nexport function CopyButton({ \r\n  text, \r\n  variant = 'ghost', \r\n  size = 'sm', \r\n  className = '',\r\n  iconOnly = false \r\n}: CopyButtonProps) {\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const handleCopy = async () => {\r\n    try {\r\n      await navigator.clipboard.writeText(text);\r\n      setCopied(true);\r\n      \r\n      // Reset after 1 second\r\n      setTimeout(() => {\r\n        setCopied(false);\r\n      }, 1000);\r\n    } catch (err) {\r\n      console.error('Failed to copy text: ', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      size={size}\r\n      onClick={handleCopy}\r\n      className={`flex items-center gap-1 ${className}`}\r\n      disabled={copied}\r\n    >\r\n      {copied ? (\r\n        <>\r\n          <Check size={14} />\r\n          {!iconOnly && 'Copied!'}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Copy size={14} />\r\n          {!iconOnly && 'Copy'}\r\n        </>\r\n      )}\r\n    </Button>\r\n  );\r\n}\r\n"]}