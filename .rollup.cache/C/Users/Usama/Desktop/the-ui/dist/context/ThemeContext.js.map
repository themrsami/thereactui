{"version":3,"file":"ThemeContext.js","sourceRoot":"","sources":["../../components/context/ThemeContext.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAClD,OAAO,EAAE,aAAa,IAAI,iBAAiB,EAAE,MAAM,aAAa,CAAC;AAGjE,kCAAkC;AAClC,MAAM,iBAAiB,GAAG,aAAa,CAAK,EAAE,CAAC,CAAC;AAEhD,MAAM,CAAC,MAAM,aAAa,GAAG,GAAG,EAAE;IAChC,MAAM,OAAO,GAAG,UAAU,CAAC,iBAAiB,CAAC,CAAC;IAC9C,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;IAC5E,CAAC;IACD,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AAEF,oEAAoE;AACpE,MAAM,UAAU,kBAAkB,CAAC,EAAE,QAAQ,EAAE,GAAG,KAAK,EAAsB;IAC3E,OAAO,CACL,KAAC,iBAAiB,IAChB,SAAS,EAAC,OAAO,EACjB,YAAY,EAAC,OAAO,EACpB,YAAY,QACZ,yBAAyB,WACrB,KAAK,YAET,KAAC,iBAAiB,CAAC,QAAQ,IAAC,KAAK,EAAE,EAAE,YAClC,QAAQ,GACkB,GACX,CACrB,CAAC;AACJ,CAAC;AAED,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC","sourcesContent":["'use client';\r\n\r\nimport { createContext, useContext } from 'react';\r\nimport { ThemeProvider as NextThemeProvider } from 'next-themes';\r\nimport type { ThemeProviderProps } from 'next-themes';\r\n\r\n// Create theReactUI theme context\r\nconst TheReactUIContext = createContext<{}>({});\r\n\r\nexport const useTheReactUI = () => {\r\n  const context = useContext(TheReactUIContext);\r\n  if (!context) {\r\n    throw new Error('useTheReactUI must be used within a TheReactUIProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// TheReactUI Provider that combines next-themes with our UI context\r\nexport function TheReactUIProvider({ children, ...props }: ThemeProviderProps) {\r\n  return (\r\n    <NextThemeProvider\r\n      attribute=\"class\"\r\n      defaultTheme=\"light\"\r\n      enableSystem\r\n      disableTransitionOnChange\r\n      {...props}\r\n    >\r\n      <TheReactUIContext.Provider value={{}}>\r\n        {children}\r\n      </TheReactUIContext.Provider>\r\n    </NextThemeProvider>\r\n  );\r\n}\r\n\r\nexport { useTheme } from 'next-themes';\r\n"]}